<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[CSS] 隱藏數字輸入框 (Input Number) 的上下箭頭 (Arrows) 控制項</title>
      <link href="/202109/css/hide-input-number-arrows-spinners/"/>
      <url>/202109/css/hide-input-number-arrows-spinners/</url>
      
        <content type="html"><![CDATA[<p>撰寫網站時，難免都會替輸入框 (input) 設定自定義樣式，有時就會需要隱藏原先輸入框 (input) 的控制項。<span id="more"></span>這邊紀錄網路上查找到，隱藏數字輸入框 (Input Number) 上下箭頭 (Arrows&#x2F;Spinners) 控制項的方式。</p><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Chrome, Safari, Edge, Opera */</span></span><br><span class="line"><span class="selector-tag">input</span>::-webkit-outer-spin-button,</span><br><span class="line">input::-webkit-inner-spin-button &#123;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Firefox */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=number]</span> &#123;</span><br><span class="line">  -moz-appearance: textfield;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://www.w3schools.com/howto/howto_css_hide_arrow_number.asp">How To Hide Arrows From Number Input - w3schools</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[JavaScript] 網頁開啟 APP - 透過 URL Scheme</title>
      <link href="/202109/js/open-app-url-scheme/"/>
      <url>/202109/js/open-app-url-scheme/</url>
      
        <content type="html"><![CDATA[<p>URL Scheme 是 APP 的一個功能，可以讓開發者根據路徑 (URL) 啟動 APP。</p><span id="more"></span><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><p>一般來說，只要將網址路徑直接更新成 APP URL Scheme 就能啟動 APP (使用 <code>window.location</code>) ，但是在一些非 Mobile 或特別的瀏覽器的環境下，直接跳轉會到一個無效頁面，這時需要透過 <code>iframe</code> 在網頁背景執行啟動。<br>此外，針對沒有成功開啟 APP 的例外情況，可以設個計時器 (使用 <code>window.setTimeout</code>) 讓其時間到跳轉到特定網頁 (像是 APP 下載 URL)。目前在一些新版的 Mobile 瀏覽器，會多跳一個是否啟動 APP 的確認視窗，所以可透過 <code>window.onblur</code> 事件來確認。<br>完整程式碼如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">openApp</span>(<span class="params">appUrl, webUrl</span>) &#123;</span><br><span class="line">  <span class="comment">// 避免啟動失敗的計時器</span></span><br><span class="line">  <span class="keyword">var</span> timer = <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (webUrl) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = webUrl;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷瀏覽器來區分啟動方式</span></span><br><span class="line">  <span class="keyword">var</span> ifr;</span><br><span class="line">  <span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/(Safari)/i</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/(iPhone|iPad|iPod)/i</span>)) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">replace</span>(appUrl);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/Mobile/i</span>)) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">replace</span>(appUrl);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      ifr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      ifr.<span class="property">src</span> = appUrl;</span><br><span class="line">      ifr.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ifr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/Chrome/i</span>)) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">replace</span>(appUrl);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ifr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    ifr.<span class="property">src</span> = appUrl;</span><br><span class="line">    ifr.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ifr);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 用 onblur 來確認有沒有多跳一個是否啟動 APP 的確認視窗</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onblur</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    <span class="keyword">if</span> (ifr) &#123;</span><br><span class="line">      ifr.<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">close</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ifr) &#123;</span><br><span class="line">      ifr.<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">10000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>隨著瀏覽器不斷更新，有些方式或許會不適用。</p><ul><li>2021&#x2F;09&#x2F;07 測試，在常用的 Chrome 與 Safari 上正常。</li></ul><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://blog.patw.me/archives/1069/js-app-url-scheme-open-workaround/">[Web][JavaScript] 有安裝 App 便開啟 App (透過 App URL scheme)，若無則導去下載 (Google Play&#x2F;App Store) 的 workaround - Partner Studio</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> URL Scheme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[SEO] HTML video 搭配 Schema 結構化資料（Structured Data）強化 SEO 設置</title>
      <link href="/202109/seo/html-video-schema-structured-data/"/>
      <url>/202109/seo/html-video-schema-structured-data/</url>
      
        <content type="html"><![CDATA[<p><img src="/202109/seo/html-video-schema-structured-data/banner.jpg" alt="Banner"></p><p>影片是網頁上常見的應用之一，在 HTML 上可以用 video 標籤來使用。<span id="more"></span>如下面這個簡單的範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">poster</span>=<span class="string">&quot;&#123;&#123;影片縮圖 URL&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;影片 URL&#125;&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&#123;&#123;影片的Media Types&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>關於 video 標籤更詳細的說明，可以參考 w3schools (<a href="https://www.w3schools.com/html/html5_video.asp">連結</a>) 或 MDN (<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video">連結</a>) 上的說明。</p><h2 id="影片的搜尋結果"><a href="#影片的搜尋結果" class="headerlink" title="影片的搜尋結果"></a>影片的搜尋結果</h2><p>隨著影片的應用越來越多，如何將影片資訊提供給 Google 搜尋引擎顯得相對重要。根據影片在 Google 搜尋上顯示的樣式（如下圖），可以看出除了影片檔案以外，主要的資訊包含名稱、說明、以及縮圖。</p><img src="/202109/seo/html-video-schema-structured-data/video-google-search-demo.png" class="" title="Google 影片搜尋範例"><h2 id="結構化資料"><a href="#結構化資料" class="headerlink" title="結構化資料"></a>結構化資料</h2><p>為了向 Google 提供影片的詳細資訊，我們可以使用 Schema.org 的「結構化資料（Structured Data）」來進行。影片資訊使用的是 Schema.org 的 VideoObject，我習慣是使用 JSON-LD 格式語法來撰寫，如下面這個簡單的範例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Your title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    ... other head content ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/ld+json&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;@context&quot;: &quot;http://schema.org&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;@type&quot;: &quot;VideoObject&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;name&quot;: &quot;</span><span class="template-variable">&#123;&#123;<span class="name">影片名稱</span>&#125;&#125;</span><span class="language-xml">&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;description&quot;: &quot;</span><span class="template-variable">&#123;&#123;<span class="name">影片說明描述</span>&#125;&#125;</span><span class="language-xml">&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;contentUrl&quot;: &quot;</span><span class="template-variable">&#123;&#123;<span class="name">影片</span> URL&#125;&#125;</span><span class="language-xml">&quot;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;thumbnailUrl&quot;: &quot;</span><span class="template-variable">&#123;&#123;<span class="name">影片縮圖</span> URL&#125;&#125;</span><span class="language-xml">&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &quot;uploadDate&quot;: &quot;</span><span class="template-variable">&#123;&#123;<span class="name">影片上傳時間（使用</span> JSON 格式，如：2015-02-05T08:00:00）&#125;&#125;</span><span class="language-xml">&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    ... other body content...</span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">poster</span>=<span class="string">&quot;&#123;&#123;影片縮圖 URL&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;影片 URL&#125;&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;&#123;&#123;影片的Media Types&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>VideoObject 除了這些屬性可以設置，還有影片長度、提供者、分段剪輯…等資訊可以設置，更多詳細內容可以參考 Schema.org 上的定義（<a href="https://schema.org/VideoObject">連結</a>），以及 Google 上的支援說明（<a href="https://developers.google.com/search/docs/data-types/video">連結</a>）。</p><h2 id="Google-Search-Console"><a href="#Google-Search-Console" class="headerlink" title="Google Search Console"></a>Google Search Console</h2><p>其他更多影片搜尋優化詳細建議可以參考 Google 上的說明（<a href="https://developers.google.com/search/docs/advanced/guidelines/video">連結</a>），在設置完成後不要忘記去 Google Search Console 上觀看結果，並查看是否有錯誤（如下圖）。</p><img src="/202109/seo/html-video-schema-structured-data/video-google-search-console.png" class="" title="影片標記在 Google Search Console 上的示意圖">]]></content>
      
      
      <categories>
          
          <category> SEO </category>
          
          <category> Structured Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
            <tag> Structured Data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CSS] 解決 Safari 使用 border-radius 搭配 overflow: hidden 沒有圓角效果的問題</title>
      <link href="/202109/css/safari-border-radius-overflow-hidden/"/>
      <url>/202109/css/safari-border-radius-overflow-hidden/</url>
      
        <content type="html"><![CDATA[<p><img src="/202109/css/safari-border-radius-overflow-hidden/banner.jpg" alt="Banner"></p><p>最近在撰寫網站時，發現在 Safari 上使用 border-radius 搭配 overflow: hidden 沒有圓角效果，這其實是 Safari 在呈現計算上的錯誤 [<a href="https://bugs.webkit.org/show_bug.cgi?id=140535">Bug</a>]，可以藉由設定遮罩讓其重新計算。<span id="more"></span></p><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">element selector &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  -webkit-<span class="attribute">mask-image</span>: <span class="built_in">-webkit-radial-gradient</span>(white, black);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或是設定 z-index 讓他重新計算堆疊位置，程式碼如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">element selector &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://stackoverflow.com/questions/49066011/overflow-hidden-with-border-radius-not-working-on-safari">html - Overflow: hidden with border radius not working on Safari - Stack Overflow</a></li><li><a href="https://kes3583.medium.com/safari-bug-border-radius-overflow-hidden-c2a09f40ad89">Safari bug — border-radius + overflow: hidden | by blossom0417 | Medium</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Safari </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[JavaScript] ES6 Array 移除重複(Distinct)</title>
      <link href="/202108/js/es6-array-remove-distinct/"/>
      <url>/202108/js/es6-array-remove-distinct/</url>
      
        <content type="html"><![CDATA[<p><img src="/202108/js/es6-array-remove-distinct/banner.jpg" alt="Banner"></p><p>以下提供兩種排除陣列重複值的方式。<span id="more"></span></p><h2 id="使用-filter-方法"><a href="#使用-filter-方法" class="headerlink" title="使用 filter 方法"></a>使用 filter 方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;g&#x27;</span>];</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newArray = [...array1, ...array2];</span><br><span class="line"><span class="keyword">const</span> result = newArray.<span class="title function_">filter</span>(<span class="function">(<span class="params">value, index, self</span>) =&gt;</span> self.<span class="title function_">indexOf</span>(value) === index);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"><span class="comment">// output: Array [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;g&quot;, &quot;d&quot;]</span></span><br></pre></td></tr></table></figure><p>此方法是使用 JavaScript 的 filter() 方法來進行過濾，藉由判斷 indexOf() 方法所查詢出 value 的索引值（index）是否與當前相同，以此來排除重複值。</p><h2 id="使用-Set-物件"><a href="#使用-Set-物件" class="headerlink" title="使用 Set 物件"></a>使用 Set 物件</h2><p>除了 filter 方法也可使用 JavaScript 的 Set 物件，因為 Set 物件只會幫你儲存任何類型的唯一值（unique），程式碼如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> array1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;g&#x27;</span>];</span><br><span class="line"><span class="keyword">const</span> array2 = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="keyword">new</span> <span class="title class_">Set</span>([...array1, ...array2]));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"><span class="comment">// output: Array [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;g&quot;, &quot;d&quot;]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CSS] 解決 iOS Safari 字體大小（font-size）設定無效的問題 — -webkit-text-size-adjust</title>
      <link href="/202108/css/-webkit-text-size-adjust/"/>
      <url>/202108/css/-webkit-text-size-adjust/</url>
      
        <content type="html"><![CDATA[<p><img src="/202108/css/-webkit-text-size-adjust/banner.jpg" alt="Banner"></p><p>在撰寫網站時，可能會發現在 Mobile Safari 的文字會被放大的問題，其原因是在行動裝置的瀏覽器有自動調整字體大小的問題。<span id="more"></span>這時可以藉由 CSS 上的 <code>-webkit-text-size-adjust</code> 屬性來控制，將其設為 100% 可關閉字體大小自動調整功能。</p><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> or element selector &#123;</span><br><span class="line">  -webkit-text-size-adjust: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust">text-size-adjust - CSS: Cascading Style Sheets | MDN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Safari </tag>
            
            <tag> Mobile Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CSS] 解決 iOS Safari 使用捲軸（Scroll）覺得卡卡的問題 — -webkit-overflow-scrolling</title>
      <link href="/202108/css/-webkit-overflow-scrolling/"/>
      <url>/202108/css/-webkit-overflow-scrolling/</url>
      
        <content type="html"><![CDATA[<p><img src="/202108/css/-webkit-overflow-scrolling/banner.jpg" alt="Banner"></p><p>在 Mobile Safari 上使用捲軸（Scroll）時，可能會覺得在操作上卡卡的，這時可以藉由 CSS 上的 <code>-webkit-overflow-scrolling</code> 屬性，來控制 Mobile Safari 上的捲動效果。</p><span id="more"></span><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Element Selector &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  -webkit-<span class="attribute">overflow</span>-scrolling: touch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://medium.com/@littleDog/%E7%94%A8-webkit-overflow-scrolling-touch-%E8%AE%93%E4%BD%A0%E7%9A%84mobile-web-application%E6%94%AF%E6%8F%B4momentum-based-scrolling-1efacea28611">用”-webkit-overflow-scrolling: touch”讓你的 mobile web application 支援 momentum-based scrolling | Medium</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling">-webkit-overflow-scrolling - CSS: Cascading Style Sheets | MDN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> Safari </tag>
            
            <tag> Mobile Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[C#] 綠界站內付2.0 - 參數加密與解密</title>
      <link href="/202108/csharp/ecpay-embedded-checkout-encrypt-and-decode/"/>
      <url>/202108/csharp/ecpay-embedded-checkout-encrypt-and-decode/</url>
      
        <content type="html"><![CDATA[<p>一般串接金流時，如果要傳遞資料都需要將資料進行加解密，而最近因案子需求有接觸到綠界站內付 2.0，所以在此紀錄如何用 C# 編寫綠界站內付 2.0 加解密的程式。</p><span id="more"></span><h2 id="綠界站內付-2-0"><a href="#綠界站內付-2-0" class="headerlink" title="綠界站內付 2.0"></a>綠界站內付 2.0</h2><p>「站內付 2.0」是綠界在今年（2021）年初推出的全新廠商付款串接規格，付款頁面改用嵌入式以減少跳轉畫面（如下圖），提供流暢的交易體驗，詳情可看綠界的<a href="https://www.ecpay.com.tw/Activities/inpay2">官網服務介紹</a>。</p><p><img src="/202108/csharp/ecpay-embedded-checkout-encrypt-and-decode/Schematic.png" alt="站內付2.0 示意圖" title="站內付2.0 示意圖"></p><h3 id="資料如何加解密？"><a href="#資料如何加解密？" class="headerlink" title="資料如何加解密？"></a>資料如何加解密？</h3><p>站內付 2.0 的介接方式可以去官網的「<a href="https://www.ecpay.com.tw/Service/API_Dwnld">串接規格下載</a>」，下載相關的技術文件。根據文件上的說明（如下圖）可知道須透過 JSON 格式編碼、URL 編碼及 AES 加密演算法，這 3 個階段來進行參數加解密。</p><p><img src="/202108/csharp/ecpay-embedded-checkout-encrypt-and-decode/Encryption.png" alt="站內付2.0 參數加密方式" title="站內付2.0 參數加密方式"></p><p>以下將先個別介紹 3 個階段該如何處理，而於最後整合在一起。</p><h2 id="AES-加密演算法"><a href="#AES-加密演算法" class="headerlink" title="AES 加密演算法"></a>AES 加密演算法</h2><p>AES（Advanced Encryption Standard）又稱 Rijndael 加密法，是對稱金鑰加密中流行的演算法之一。</p><h3 id="AesCryptoServiceProvider"><a href="#AesCryptoServiceProvider" class="headerlink" title="AesCryptoServiceProvider"></a>AesCryptoServiceProvider</h3><p>針對 AES 加密演算法可透過 AesCryptoServiceProvider 類別來處理，這是微軟提供有關於 AES 的實作類別，用於執行對稱加密和解密。</p><ul><li><strong>命名空間</strong>: <code>System.Security.Cryptography</code></li><li><a href="https://docs.microsoft.com/zh-tw/dotnet/api/system.security.cryptography.aescryptoserviceprovider" title="AesCryptoServiceProvider 類別 (System.Security.Cryptography) | Microsoft Docs">官方文件</a></li></ul><h3 id="加解密程式範例"><a href="#加解密程式範例" class="headerlink" title="加解密程式範例"></a>加解密程式範例</h3><p>跟據綠界所需的 AES 設定，建立一個用於處理 AES 加解密的類別，程式碼如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AESEncryption</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 加密</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;text&quot;&gt;</span>資料字串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;key&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;iv&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>加密字串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> text, <span class="built_in">string</span> key, <span class="built_in">string</span> iv</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> encrypt = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">using</span> (AesCryptoServiceProvider csp = <span class="keyword">new</span> AesCryptoServiceProvider())</span><br><span class="line">        &#123;</span><br><span class="line">            csp.KeySize = <span class="number">128</span>;</span><br><span class="line">            csp.IV = Encoding.UTF8.GetBytes(iv);</span><br><span class="line">            csp.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            csp.Mode = CipherMode.CBC;</span><br><span class="line">            csp.Padding = PaddingMode.PKCS7;</span><br><span class="line">            <span class="built_in">byte</span>[] data = Encoding.UTF8.GetBytes(text);</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream cs = <span class="keyword">new</span> CryptoStream(ms, csp.CreateEncryptor(), CryptoStreamMode.Write))</span><br><span class="line">                &#123;</span><br><span class="line">                    cs.Write(data, <span class="number">0</span>, data.Length);</span><br><span class="line">                    cs.FlushFinalBlock();</span><br><span class="line">                    encrypt = Convert.ToBase64String(ms.ToArray());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> encrypt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 解密</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;encryptedText&quot;&gt;</span>加密字串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;key&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;iv&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>解密後的資料字串<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> encryptedText, <span class="built_in">string</span> key, <span class="built_in">string</span> iv</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> plaintext = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">using</span> (AesCryptoServiceProvider csp = <span class="keyword">new</span> AesCryptoServiceProvider())</span><br><span class="line">        &#123;</span><br><span class="line">            csp.KeySize = <span class="number">128</span>;</span><br><span class="line">            csp.IV = Encoding.UTF8.GetBytes(iv);</span><br><span class="line">            csp.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            csp.Mode = CipherMode.CBC;</span><br><span class="line">            csp.Padding = PaddingMode.PKCS7;</span><br><span class="line">            <span class="built_in">byte</span>[] cipherText = Convert.FromBase64String(encryptedText);</span><br><span class="line">            ICryptoTransform decryptor = csp.CreateDecryptor();</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream(cipherText))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream cs = <span class="keyword">new</span> CryptoStream(ms, decryptor, CryptoStreamMode.Read))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">using</span> (StreamReader reader = <span class="keyword">new</span> StreamReader(cs))</span><br><span class="line">                    &#123;</span><br><span class="line">                        plaintext = reader.ReadToEnd();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> plaintext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul><li><a href="https://levelup.gitconnected.com/implementing-aes-encryption-in-node-js-and-c-from-scratch-6ee7b47ae6d4">Implementing AES Encryption in Node.js and C# from Scratch | Medium</a></li></ul><h2 id="URL-編碼"><a href="#URL-編碼" class="headerlink" title="URL 編碼"></a>URL 編碼</h2><p>這應該不用作者我多做介紹吧，常用於 URL 上的字元編碼，網路上有更多其他詳細說明的資源的。</p><h3 id="HttpUtility"><a href="#HttpUtility" class="headerlink" title="HttpUtility"></a>HttpUtility</h3><p>針對 URL 編碼可透過 HttpUtility 類別來處理，這是微軟提供處理關於 Web 請求時所需的編碼和解碼方法。</p><ul><li><strong>命名空間</strong>: <code>System.Web</code></li><li><a href="https://docs.microsoft.com/zh-tw/dotnet/api/system.web.httputility" title="HttpUtility 類別 (System.Web) | Microsoft Docs">官方文件</a></li></ul><p>使用其中的 <code>UrlEncode</code> 與 <code>UrlDecode</code> 方法來處理。</p><h4 id="UrlEncode-編碼"><a href="#UrlEncode-編碼" class="headerlink" title="UrlEncode - 編碼"></a>UrlEncode - 編碼</h4><ul><li><a href="https://docs.microsoft.com/zh-tw/dotnet/api/system.web.httputility.urlencode" title="HttpUtility.UrlEncode 方法 (System.Web) | Microsoft Docs">官方文件</a></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span>? UrlEncode (<span class="built_in">string</span>? str);</span><br></pre></td></tr></table></figure><h4 id="UrlDecode-解碼"><a href="#UrlDecode-解碼" class="headerlink" title="UrlDecode - 解碼"></a>UrlDecode - 解碼</h4><ul><li><a href="https://docs.microsoft.com/zh-tw/dotnet/api/system.web.httputility.urldecode" title="HttpUtility.UrlDecode 方法 (System.Web) | Microsoft Docs">官方文件</a></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span>? UrlDecode (<span class="built_in">string</span>? str);</span><br></pre></td></tr></table></figure><h2 id="JSON-格式編碼"><a href="#JSON-格式編碼" class="headerlink" title="JSON 格式編碼"></a>JSON 格式編碼</h2><p>這應該不用作者我多做介紹吧，常用於 JavaScript 上傳輸資料的呈現格式，網路上有更多其他詳細說明的資源的。</p><h3 id="JsonConvert"><a href="#JsonConvert" class="headerlink" title="JsonConvert"></a>JsonConvert</h3><p>針對 JSON 可透過 Json.NET 類別庫提供的 JsonConvert 類別來處理。首先，須透過 NuGet 先下載 Newtonsoft.Json。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Package Newtonsoft.Json</span><br></pre></td></tr></table></figure><h4 id="SerializeObject-序列化"><a href="#SerializeObject-序列化" class="headerlink" title="SerializeObject - 序列化"></a>SerializeObject - 序列化</h4><ul><li><a href="https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_JsonConvert_SerializeObject.htm" title="JsonConvert.SerializeObject Method | Json.NET Documentation">官方文件</a></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">SerializeObject</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    Object <span class="keyword">value</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span></span><br></pre></td></tr></table></figure><h4 id="DeserializeObject-反序列"><a href="#DeserializeObject-反序列" class="headerlink" title="DeserializeObject - 反序列"></a>DeserializeObject - 反序列</h4><ul><li><a href="https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_JsonConvert_DeserializeObject.htm" title="JsonConvert.DeserializeObject Method | Json.NET Documentation">官方文件</a></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> T <span class="title">DeserializeObject</span>&lt;<span class="title">T</span>&gt;(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="built_in">string</span> <span class="keyword">value</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span></span><br></pre></td></tr></table></figure><h2 id="完整程式範例"><a href="#完整程式範例" class="headerlink" title="完整程式範例"></a>完整程式範例</h2><p>最後依據綠界站內付 2.0 所需的加解密流程，將各步驟的程式碼組合在一起，其中 AES 加解密使用前面撰寫的類別來處理，程式碼如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ECPayService</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">EncryptData</span>(<span class="params"><span class="built_in">object</span> data, <span class="built_in">string</span> HashKey, <span class="built_in">string</span> HashIV</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">var</span> text = HttpUtility.UrlEncode(JsonConvert.SerializeObject(data));</span><br><span class="line">      <span class="keyword">return</span> AESEncryption.Encrypt(text, HashKey, HashIV);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> TResult <span class="title">DecryptData</span>&lt;<span class="title">TResult</span>&gt;(<span class="params"><span class="built_in">string</span> encryptedText, <span class="built_in">string</span> HashKey, <span class="built_in">string</span> HashIV</span>) <span class="keyword">where</span> TResult : <span class="keyword">class</span></span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="built_in">string</span> plaintext = AESEncryption.Decrypt(encryptedText, HashKey, HashIV);</span><br><span class="line">      <span class="built_in">string</span> jsonStr = HttpUtility.UrlDecode(plaintext);</span><br><span class="line">      <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;TResult&gt;(jsonStr, <span class="keyword">new</span> JsonSerializerSettings &#123; MetadataPropertyHandling = MetadataPropertyHandling.Ignore &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> ECPay </tag>
            
            <tag> AES 加密 </tag>
            
            <tag> URL encoding </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[JavaScript] 使用 Fetch API 來下載檔案（Download File）</title>
      <link href="/202108/js/file-download-using-fetch/"/>
      <url>/202108/js/file-download-using-fetch/</url>
      
        <content type="html"><![CDATA[<p><img src="/202108/js/file-download-using-fetch/banner.jpg" alt="Banner"></p><p>一般來說檔案要讓使用者下載很簡單，只需要在畫面上放一個超連結導向到檔案的路徑，當使用者點擊即開始下載。<br>然而並不是每次都那麼簡單，也是有可能會有需要藉由 API 的方式來產生並下載檔案的情況，此時只好自己寫 JavaScript 去呼叫 API 並下載檔案。</p><span id="more"></span><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Download file</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;Your api or file url&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="comment">// 其他設定或是需要傳遞的資料</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">blob</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(blob); <span class="comment">// create url from blob</span></span><br><span class="line">    <span class="keyword">var</span> fileLink = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// create link for file</span></span><br><span class="line">    fileLink.<span class="property">href</span> = url;</span><br><span class="line">    fileLink.<span class="property">download</span> = <span class="string">&#x27;output.csv&#x27;</span>; <span class="comment">// download filename</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(fileLink); <span class="comment">// append file link to download</span></span><br><span class="line">    fileLink.<span class="title function_">click</span>();</span><br><span class="line">    fileLink.<span class="title function_">remove</span>(); <span class="comment">// remove file link after click</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Handle error here.</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>其主要概念就是取得檔案 Blob 並轉換成 URL，最後藉由 HTML 的超連結標籤（&lt;a&gt;）來模擬下載檔案。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://medium.com/@NorthBei/js%E7%AD%86%E8%A8%98-js-download-file-programmatically-padding-zero-4bf23a7e5cff">[JS 筆記]Js download file programmatically &amp; padding zero | Medium</a></li><li><a href="https://scarletsky.github.io/2016/07/03/download-file-using-javascript/">如何用 JavaScript 下载文件 - scarletsky</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Fetch API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[JavaScript] 藉由 Fetch API 與 Form Data 來上傳檔案（Uploading files）</title>
      <link href="/202108/js/file-upload-using-fetch/"/>
      <url>/202108/js/file-upload-using-fetch/</url>
      
        <content type="html"><![CDATA[<p><img src="/202108/js/file-upload-using-fetch/banner.jpg" alt="Banner"></p><p>上傳檔案是 Web 常用的應用之一，能使用的方式有相當多中，其中最常基本的方式就是將 HTML form 標籤上的編碼類型(enctype)設為 multipart&#x2F;form-data，讓瀏覽器能針對檔案進行編碼。</p><span id="more"></span><p>這邊紀錄如何使用 JavaScript 的 Fetch API 來上傳檔案，使用 API 上傳檔案需透過建立一個 FormData 物件來當作請求內容。</p><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Upload file</span></span><br><span class="line"><span class="comment">// 先取得使用者上傳的檔案</span></span><br><span class="line"><span class="comment">// ex. var selectedFile = document.getElementById(&#x27;file&#x27;).files[0];</span></span><br><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, file); <span class="comment">// 設定上傳的檔案</span></span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;aa01&#x27;</span>); <span class="comment">// 可以一起設定其他需要傳送的資料</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;你的 API 網址&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">body</span>: formData,</span><br><span class="line">  <span class="comment">// Other setting you need</span></span><br><span class="line">  <span class="comment">// 不需要設定 &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27; ，已經用 FormData 物件作為請求內容了</span></span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">json</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Handle get result here.</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Handle error here.</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>在 Chrome 的開發人員工具裡，查看此檔案上傳的內容，其顯示內容如下圖：</p><img src="/202108/js/file-upload-using-fetch/chrome-upload-file.png" class="" title="Chrome 預覽"><p>可以發現資料採用 Form Data 格式，而檔案轉 Binary 傳送給 API 了。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://muffinman.io/uploading-files-using-fetch-multipart-form-data">Uploading files using ‘fetch’ and ‘FormData’ · Muffin Man</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 程式設計 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Fetch API </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
